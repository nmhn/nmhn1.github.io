{
    "version": "https://jsonfeed.org/version/1",
    "title": "年没怀念der博客",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/12/06/%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/",
            "url": "http://example.com/2021/12/06/%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/",
            "title": "21/12/6 Database 查询优化",
            "date_published": "2021-12-06T11:09:47.000Z",
            "content_html": "<h1 id=\"查询优化\"><a class=\"anchor\" href=\"#查询优化\">#</a> 查询优化</h1>\n<h4 id=\"游标\"><a class=\"anchor\" href=\"#游标\">#</a> 游标</h4>\n<h6 id=\"目的-解决集合性操作语言与过程性操作语言的不匹配\"><a class=\"anchor\" href=\"#目的-解决集合性操作语言与过程性操作语言的不匹配\">#</a> 目的 - 解决集合性操作语言与过程性操作语言的不匹配</h6>\n<h6 id=\"原因sql一条语句一般能产生或处理多条记录而主语言一次只能存放一条记录\"><a class=\"anchor\" href=\"#原因sql一条语句一般能产生或处理多条记录而主语言一次只能存放一条记录\">#</a> 原因:sql 一条语句一般能产生或处理多条记录，而主语言一次只能存放一条记录</h6>\n<h6 id=\"是什么是系统为用户开设的一个数据缓冲区存放sql语句的执行结果\"><a class=\"anchor\" href=\"#是什么是系统为用户开设的一个数据缓冲区存放sql语句的执行结果\">#</a> 是什么：是系统为用户开设的一个数据缓冲区，存放 sql 语句的执行结果</h6>\n<p>用户可以用 SQL 语句逐一地从游标中获取记录，并赋给主变量</p>\n<h6 id=\"定义游标-使用declare语句\"><a class=\"anchor\" href=\"#定义游标-使用declare语句\">#</a> 定义游标：使用 Declare 语句</h6>\n<p>EXEC SQL DECLARE &lt;&gt; CURSOR......</p>\n<h6 id=\"打开游标-执行相应的select语句吧所有满足查询条件的记录从指定表取到缓冲区中\"><a class=\"anchor\" href=\"#打开游标-执行相应的select语句吧所有满足查询条件的记录从指定表取到缓冲区中\">#</a> 打开游标 -- 执行相应的 select 语句，吧所有满足查询条件的记录从指定表取到缓冲区中</h6>\n<p>EXEC SQL OPEN &lt;游标名&gt;</p>\n<p>此时游标指针指向查询结果集中第一条记录之前</p>\n<h6 id=\"推动游标\"><a class=\"anchor\" href=\"#推动游标\">#</a> 推动游标</h6>\n<p>使用 FETCH 语句</p>\n<p>EXEC SQL FETCH [[NEXT]]....</p>\n<p>指定方向推动游标指针，然后将缓冲区中的当前记录取出来送至主变量供主语言进一步处理</p>\n<p>要求：主变量与 select 语句中的目标列表达式具有一一对应关系</p>\n<h6 id=\"关闭游标\"><a class=\"anchor\" href=\"#关闭游标\">#</a> 关闭游标</h6>\n<p>CLOSE 语句</p>\n<p>EXEC SQL CLOSE &lt;游标名&gt;</p>\n<h2 id=\"71查询处理过程\"><a class=\"anchor\" href=\"#71查询处理过程\">#</a> 7.1 查询处理过程</h2>\n<h3 id=\"711-查询分析\"><a class=\"anchor\" href=\"#711-查询分析\">#</a> 7.1.1 查询分析</h3>\n<p>对查询语句进行扫描，词法分析和语法分析</p>\n<h3 id=\"712查询检查\"><a class=\"anchor\" href=\"#712查询检查\">#</a> 7.1.2 查询检查</h3>\n<p>根据数据字典中的用户权限和完整性约束定义对用户的存取权限进行检查</p>\n<p>检查通过后将 SQL 查询语句转换成等价的 &lt;u&gt; 关系代数表达式 &lt;/u&gt;</p>\n<h3 id=\"714查询优化\"><a class=\"anchor\" href=\"#714查询优化\">#</a> 7.1.4 查询优化</h3>\n<p>选择一个高效执行的查询处理策略</p>\n<h4 id=\"代数优化-关系代数表达式优化\"><a class=\"anchor\" href=\"#代数优化-关系代数表达式优化\">#</a> 代数优化 - 关系代数表达式优化</h4>\n<h4 id=\"物理优化-存取物理介质及的优化\"><a class=\"anchor\" href=\"#物理优化-存取物理介质及的优化\">#</a> 物理优化 - 存取物理介质及... 的优化</h4>\n<h3 id=\"715查询执行\"><a class=\"anchor\" href=\"#715查询执行\">#</a> 7.1.5 查询执行</h3>\n<p>不用多言</p>\n<h2 id=\"72执行查询操作的基本算法\"><a class=\"anchor\" href=\"#72执行查询操作的基本算法\">#</a> 7.2 执行查询操作的基本算法</h2>\n<h3 id=\"1-选择操作\"><a class=\"anchor\" href=\"#1-选择操作\">#</a> 1. 选择操作</h3>\n<p>顺序扫描 / 二分查找 / 索引 [散列]/ 复合选择</p>\n<p>索引 -- 提供元组指针，间接检索</p>\n<p>B + 树索引：同样是提供元组指针，同时支持顺序集中依次查找</p>\n<p>如是 sdept='cs' and sae&gt;20: 则</p>\n<p>算法一：分别查询，求交集</p>\n<p>算法而：先找到第一个查询的指针，然后在第一个查询的指针基础上进行第二个查询</p>\n<h3 id=\"2连接操作\"><a class=\"anchor\" href=\"#2连接操作\">#</a> 2. 连接操作</h3>\n<h6 id=\"连接操作是查询处理中最耗时的操作之一\"><a class=\"anchor\" href=\"#连接操作是查询处理中最耗时的操作之一\">#</a> 连接操作是查询处理中最耗时的操作之一</h6>\n<p>[例 2]</p>\n<p>SELECT *</p>\n<p>FROM Student,SC</p>\n<p>WHERE Student.Sno=SC.Sno</p>\n<p>[例 2end]</p>\n<ol>\n<li>嵌套循环法<br />\n对外层循环的每一个元组，检测内层循环中的每一个元组，检查两个元组在连接属性上是否相等<br />\n满足，即串接后作为结果输出</li>\n<li>索引链接法<br />\n在输出表上建立属性 Sno 的索引 (如果原来没有)<br />\n 对 student 中每个元组，有 Sno 值通过 Sc........</li>\n<li>排序合并法<br />\n适合连接的诸表已经排好序的情况<br />\n没排序则排序<br />\n取 Student 表中第一个 sno, 然后依次找 sc 表中具有相同 sno 的元组<br />\n扫到 sno 不相同的第一个 sc 元组时，返回 Student 扫描它的下一个元组<br />\n之后循环</li>\n<li>散列连接法<br />\n把连接属性作为散列码，<br />\n 然后划分</li>\n</ol>\n<h3 id=\"3投影操作\"><a class=\"anchor\" href=\"#3投影操作\">#</a> 3. 投影操作</h3>\n<h6 id=\"选取关系的某些列从垂直的方向减小关系的大小\"><a class=\"anchor\" href=\"#选取关系的某些列从垂直的方向减小关系的大小\">#</a> 选取关系的某些列，从垂直的方向减小关系的大小</h6>\n<p>如果投影属性列包括了关系 R 的主键，则操作可言直接执行，操作结果将于 R 中元组个数相同</p>\n<p>否则则需要消除重复元组</p>\n<h3 id=\"4集合运算操作\"><a class=\"anchor\" href=\"#4集合运算操作\">#</a> 4. 集合运算操作</h3>\n<p>并，查，交，笛卡尔积</p>\n<p>并查缴类似排序合并法</p>\n<p>笛卡尔积一般嵌套循环合并</p>\n<h2 id=\"73关系数据库系统的查询优化\"><a class=\"anchor\" href=\"#73关系数据库系统的查询优化\">#</a> 7.3 关系数据库系统的查询优化</h2>\n<p>分布式数据库：总代接 = I/O 代价 +*****</p>\n<h4 id=\"732查询优化实例\"><a class=\"anchor\" href=\"#732查询优化实例\">#</a> 7.3.2 查询优化实例</h4>\n<p>假定学生 - 课程数据库中有 1000 个学生记录，10000 个选课记录</p>\n<p>其中选修二号课程的选课记录为 50 个</p>\n<p>查询选修了 2 号课程的学生姓名</p>\n<h5 id=\"第一种情况\"><a class=\"anchor\" href=\"#第一种情况\">#</a> 第一种情况</h5>\n<h6 id=\"1计算广义笛卡尔积\"><a class=\"anchor\" href=\"#1计算广义笛卡尔积\">#</a> 1. 计算广义笛卡尔积</h6>\n<p>- 把 student 和 sc 的每个元组连接起来的做法</p>\n<h6 id=\"2做选择操作\"><a class=\"anchor\" href=\"#2做选择操作\">#</a> 2. 做选择操作</h6>\n<p>依次读入连接后的元组，按照选择条件选取满足要求的记录</p>\n<h6 id=\"3做投影操作\"><a class=\"anchor\" href=\"#3做投影操作\">#</a> 3. 做投影操作</h6>\n<p>把第二步操作的结果在 Sname 上作投影输出，得到最终输出</p>\n<h5 id=\"第二种情况\"><a class=\"anchor\" href=\"#第二种情况\">#</a> 第二种情况</h5>\n<h6 id=\"1计算自然连接\"><a class=\"anchor\" href=\"#1计算自然连接\">#</a> 1. 计算自然连接</h6>\n<h6 id=\"2读取中间文件块进行选择操作\"><a class=\"anchor\" href=\"#2读取中间文件块进行选择操作\">#</a> 2. 读取中间文件块，进行选择操作</h6>\n<h6 id=\"3投影输出\"><a class=\"anchor\" href=\"#3投影输出\">#</a> 3. 投影输出</h6>\n<h5 id=\"第三种情况\"><a class=\"anchor\" href=\"#第三种情况\">#</a> 第三种情况</h5>\n<h6 id=\"1先对sc表进行选择运算\"><a class=\"anchor\" href=\"#1先对sc表进行选择运算\">#</a> 1. 先对 sc 表进行选择运算</h6>\n<h6 id=\"2读取student表把读入的student元组和内存中收到sc元组做连接\"><a class=\"anchor\" href=\"#2读取student表把读入的student元组和内存中收到sc元组做连接\">#</a> 2. 读取 Student 表，把读入的 student 元组和内存中收到 sc 元组做连接</h6>\n<h6 id=\"3把连接结果投影输出\"><a class=\"anchor\" href=\"#3把连接结果投影输出\">#</a> 3. 把连接结果投影输出</h6>\n<p>假如 SC 表的 Cno 字段 / Student 表上的 Sno 有索引，可加快读取</p>\n<h4 id=\"有选择和连接操作时先做选择操作-代数优化\"><a class=\"anchor\" href=\"#有选择和连接操作时先做选择操作-代数优化\">#</a> 有选择和连接操作时，先做选择操作 -- 代数优化</h4>\n<h4 id=\"选择操作算法有权标扫描和索引扫描两种在第三种情况下索引扫描效果好-物理优化\"><a class=\"anchor\" href=\"#选择操作算法有权标扫描和索引扫描两种在第三种情况下索引扫描效果好-物理优化\">#</a> 选择操作算法有权标扫描和索引扫描两种，在第三种情况下，索引扫描效果好 -- 物理优化</h4>\n<h3 id=\"733-代数优化\"><a class=\"anchor\" href=\"#733-代数优化\">#</a> 7.3.3 代数优化</h3>\n<h4 id=\"关系代数表达式的等价变换规则\"><a class=\"anchor\" href=\"#关系代数表达式的等价变换规则\">#</a> 关系代数表达式的等价变换规则</h4>\n<p>指用相同的关系代替两个表达式中相应的关系所得到的结果是相同的</p>\n<h5 id=\"常用的等价变换规则\"><a class=\"anchor\" href=\"#常用的等价变换规则\">#</a> 常用的等价变换规则</h5>\n<h4 id=\"代数优化策略-通过对关系代数表达式的等价变化来提高查询效率\"><a class=\"anchor\" href=\"#代数优化策略-通过对关系代数表达式的等价变化来提高查询效率\">#</a> 代数优化策略 - 通过对关系代数表达式的等价变化来提高查询效率</h4>\n<h5 id=\"启发式规则\"><a class=\"anchor\" href=\"#启发式规则\">#</a> 启发式规则</h5>\n<ol>\n<li><strong>选择运算尽可能先做，最重要最基本的一条</strong></li>\n<li>把投影运算和选择运算同时进行</li>\n<li>把投影同其前后的双目运算结合起来</li>\n<li>把某些选择同在它前面要执行的笛卡尔积结合起来形成一个连接运算'</li>\n<li>找出公共子表达式</li>\n</ol>\n<h4 id=\"代数优化算法\"><a class=\"anchor\" href=\"#代数优化算法\">#</a> 代数优化算法</h4>\n<p>输入：一个查询树</p>\n<p>输出：优化的查询树</p>\n<h5 id=\"物理优化\"><a class=\"anchor\" href=\"#物理优化\">#</a> 物理优化</h5>\n<p>代数优化改变查询语句中操作的次序和组合，不涉及底层的存取路径</p>\n<p>定义：选择高效合理的操作算法 / 存取路径</p>\n<h6 id=\"基于存取路径的优化\"><a class=\"anchor\" href=\"#基于存取路径的优化\">#</a> 基于存取路径的优化</h6>\n<p>选择操作的启发式规则 --</p>\n<ol>\n<li>\n<p>对于小关系，使用全表顺序扫描，即使有索引</p>\n</li>\n<li>\n<p>对于大关系 --</p>\n<ol>\n<li>对于选择条件是主键 = 值的查询<br />\n选择主键索引</li>\n<li>对于选择条件是非主属性 = 值的查询，且选择列上有索引<br />\n估算查询结果的元组书目 -- 比例小 (10%), 索引，比例大 - 全表</li>\n<li>选择条件是属性上的非等值查询或范围查询，且存在索引<br />\n估算查询结果的元组书目 -- 比例小 (10%), 索引，比例大 - 全表</li>\n<li>对于用 and 连接的合取选择条件<br />\n优先采用组合索引扫描....</li>\n<li>or 连接<br />\n一般全表</li>\n</ol>\n</li>\n</ol>\n<p>连接操作的启发式规则</p>\n<ol>\n<li>两个比哦啊都已经按照连接属性排序<br />\n排序合并法</li>\n<li>一个表在连接属性上有索引<br />\n索引连接法</li>\n<li>都不是 1,2, 而其中一个表比较小<br />\n散列连接法</li>\n<li>可以选用嵌套循环阀，并选择较小的表作为外表</li>\n</ol>\n<h6 id=\"基于代价估算的优化\"><a class=\"anchor\" href=\"#基于代价估算的优化\">#</a> 基于代价估算的优化</h6>\n<h6 id=\"二者结合的优化\"><a class=\"anchor\" href=\"#二者结合的优化\">#</a> 二者结合的优化</h6>\n",
            "tags": [
                "大三",
                "class3"
            ]
        },
        {
            "id": "http://example.com/2021/12/06/21-12-6-Database-exp-8/",
            "url": "http://example.com/2021/12/06/21-12-6-Database-exp-8/",
            "title": "21/12/6 Database exp 8",
            "date_published": "2021-12-06T11:09:47.000Z",
            "content_html": "<ol>\n<li>\n<h1 id=\"分析系统功能\"><a class=\"anchor\" href=\"#分析系统功能\">#</a> 分析系统功能</h1>\n<ol>\n<li>\n<h2 id=\"er图\"><a class=\"anchor\" href=\"#er图\">#</a> ER 图</h2>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120140233739.png\" alt=\"image-20211120140233739\" /></p>\n</li>\n<li>\n<h2 id=\"关系模型\"><a class=\"anchor\" href=\"#关系模型\">#</a> 关系模型</h2>\n<ol>\n<li>\n<h3 id=\"对象的属性描述\"><a class=\"anchor\" href=\"#对象的属性描述\">#</a> 对象的属性描述</h3>\n<p>客户 (&lt;u&gt; 客户编号 &lt;/u&gt;, 电子邮箱，登录密码，身份证，联系方式，姓名)<br />\n 银行卡 (&lt;u&gt; 卡号 &lt;/u&gt;, 类型，客户编号)<br />\n 理财产品 (&lt;u&gt; 理财产品编号 &lt;/u&gt;, 理财年限，购买金额，产品名称，产品描述)<br />\n 基金 (&lt;u&gt; 基金编号 &lt;/u&gt;, 基金名称，基金类型，风险等级，基金管理者，基金金额)<br />\n 保险 (&lt;u&gt; 保险编号 &lt;/u&gt;, 保险名称，适用人群，保险项目，保险金额，保险年限)<br />\n 资产 (&lt;u&gt; 客户编号 &lt;/u&gt;,&lt;u &gt; 资产编号 &lt;/u&gt;, 状态，购买数量，收益，购买时间)</p>\n</li>\n<li>\n<h3 id=\"对象之间关系描述\"><a class=\"anchor\" href=\"#对象之间关系描述\">#</a> 对象之间关系描述</h3>\n<p>一个客户可以购买多种理财产品<br />\n可以办理多张银行卡<br />\n一个客户可以购买多种保险<br />\n一个客户可以购买多种基金<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120145443968.png\" alt=\"image-20211120145443968\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<h2 id=\"物理设计与数据字典\"><a class=\"anchor\" href=\"#物理设计与数据字典\">#</a> 物理设计与数据字典</h2>\n<ol>\n<li>\n<h3 id=\"表及其属性\"><a class=\"anchor\" href=\"#表及其属性\">#</a> 表及其属性</h3>\n<p>client(c_id,c_name,c_mail,c_id_card,c_phone,c_password)<br />\nbank_card(b_id,b_type,b_c_id)<br />\nproperty(p_id,p_c_id,p_i_id,p_status,p_amount,p_get_time,p_income,p_type)<br />\nfund(f_name,f_id,f_type,f_amount,risk_level,f_manager)<br />\ninsurance(i_name,i_id,i_amount,i_person,i_year,i_project)<br />\nf_product(fp_id,fp_name，fp_description，fp_amount，fp_year)</p>\n</li>\n<li>\n<h3 id=\"数据字典\"><a class=\"anchor\" href=\"#数据字典\">#</a> 数据字典</h3>\n<ol>\n<li>\n<h4 id=\"表1-1-client表\"><a class=\"anchor\" href=\"#表1-1-client表\">#</a> 表 1-1 client 表</h4>\n<table>\n<thead>\n<tr>\n<th><strong>字段名称</strong></th>\n<th><strong>字段类型</strong></th>\n<th><strong>约束</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>c_id</td>\n<td>INTEGER</td>\n<td>PRIMARY KEY</td>\n<td>客户编码</td>\n</tr>\n<tr>\n<td>c_name</td>\n<td>VARCHAR(100)</td>\n<td>NOT NULL</td>\n<td>客户名称</td>\n</tr>\n<tr>\n<td>c_mail</td>\n<td>CHAR(30)</td>\n<td>UNIQUE</td>\n<td>客户邮箱</td>\n</tr>\n<tr>\n<td>c_id_card</td>\n<td>CHAR(20)</td>\n<td>UNIQUE NOT NULL</td>\n<td>客户身份证</td>\n</tr>\n<tr>\n<td>c_phone</td>\n<td>CHAR(20)</td>\n<td>UNIQUE NOT NULL</td>\n<td>客户手机号</td>\n</tr>\n<tr>\n<td>c_password</td>\n<td>CHAR(20)</td>\n<td>NOT NULL</td>\n<td>客户登录密码</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<h4 id=\"表1-2bank_card表\"><a class=\"anchor\" href=\"#表1-2bank_card表\">#</a> 表 1-2bank_card 表</h4>\n<table>\n<thead>\n<tr>\n<th><strong>字段名称</strong></th>\n<th><strong>字段类型</strong></th>\n<th><strong>约束</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>b_id</td>\n<td>INTEGER</td>\n<td>PRIMARY KEY</td>\n<td>银行卡号</td>\n</tr>\n<tr>\n<td>b_type</td>\n<td>CHAR(20)</td>\n<td>NOT NULL</td>\n<td>银行卡类型</td>\n</tr>\n<tr>\n<td>b_c_id</td>\n<td>INTERGER</td>\n<td>NOT NULL  &lt;br /&gt;FOREIGNKEY</td>\n<td>客户编号</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<h4 id=\"表1-3-property资产表\"><a class=\"anchor\" href=\"#表1-3-property资产表\">#</a> 表 1-3 property 资产表</h4>\n<table>\n<thead>\n<tr>\n<th><strong>字段名称</strong></th>\n<th><strong>字段类型</strong></th>\n<th><strong>约束</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>p_id</td>\n<td>INTEGER</td>\n<td>PRIMARY KEY</td>\n<td>资产编号</td>\n</tr>\n<tr>\n<td>p_c_id</td>\n<td>INTEGER</td>\n<td>NOT NULL&lt;br /&gt;FOREIGN KEY</td>\n<td>客户编号 &lt;br /&gt; 外键，对应 client 中的 c_id</td>\n</tr>\n<tr>\n<td>p_i_id</td>\n<td>INTEGER</td>\n<td>NOT NULL&lt;br /&gt;FOREIGN KEY</td>\n<td>商品编号，对应三种产品的 id</td>\n</tr>\n<tr>\n<td>p_status</td>\n<td>CHAR(20)</td>\n<td>NOT NULL</td>\n<td>状态</td>\n</tr>\n<tr>\n<td>p_amount</td>\n<td>INTERGER</td>\n<td>NOT NULL</td>\n<td>购买数量</td>\n</tr>\n<tr>\n<td>p_get_time</td>\n<td>DATE</td>\n<td>NOT NULL</td>\n<td>购买时间</td>\n</tr>\n<tr>\n<td>p_income</td>\n<td>INTERGER</td>\n<td></td>\n<td>收益</td>\n</tr>\n<tr>\n<td>p_type</td>\n<td>INTERGER</td>\n<td>NOT NULL</td>\n<td>1 代表是理财产品，2 代表保险，3 代表基金</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<h4 id=\"表1-4-f_products-理财产品表\"><a class=\"anchor\" href=\"#表1-4-f_products-理财产品表\">#</a> 表 1-4 f_products 理财产品表</h4>\n<table>\n<thead>\n<tr>\n<th><strong>字段名称</strong></th>\n<th><strong>字段类型</strong></th>\n<th><strong>约束</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>fp_id</td>\n<td>INTEGER</td>\n<td>PRIMARY KEY</td>\n<td>理财产品编号</td>\n</tr>\n<tr>\n<td>fp_year</td>\n<td>INTEGER</td>\n<td></td>\n<td>理财年限</td>\n</tr>\n<tr>\n<td>fp_amount</td>\n<td>INTERGER</td>\n<td></td>\n<td>购买金额</td>\n</tr>\n<tr>\n<td>fp_name</td>\n<td>VARCHAR(200)</td>\n<td>NOT NULL</td>\n<td>产品名称</td>\n</tr>\n<tr>\n<td>fp_description</td>\n<td>VARCHAR(2000)</td>\n<td>NOT NULL</td>\n<td>产品描述</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<h4 id=\"表1-5-insurance-保险表\"><a class=\"anchor\" href=\"#表1-5-insurance-保险表\">#</a> 表 1-5 insurance 保险表</h4>\n<table>\n<thead>\n<tr>\n<th><strong>字段名称</strong></th>\n<th><strong>字段类型</strong></th>\n<th><strong>约束</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>i_id</td>\n<td>INTEGER</td>\n<td>PRIMARY KEY</td>\n<td>保险编号</td>\n</tr>\n<tr>\n<td>i_name</td>\n<td>VARCHAR(100)</td>\n<td>NOT NULL</td>\n<td>保险名称</td>\n</tr>\n<tr>\n<td>i_person</td>\n<td>CHAR(30)</td>\n<td></td>\n<td>适用人群</td>\n</tr>\n<tr>\n<td>i_project</td>\n<td>VARCHAR(200)</td>\n<td></td>\n<td>保险项目</td>\n</tr>\n<tr>\n<td>i_amount</td>\n<td>INTERGER</td>\n<td></td>\n<td>保险金额</td>\n</tr>\n<tr>\n<td>i_year</td>\n<td>CHAR(20)</td>\n<td>NOT NULL</td>\n<td>保险年限</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<h4 id=\"表1-6-fund基金表\"><a class=\"anchor\" href=\"#表1-6-fund基金表\">#</a> 表 1-6 fund 基金表</h4>\n<table>\n<thead>\n<tr>\n<th><strong>字段名称</strong></th>\n<th><strong>字段类型</strong></th>\n<th><strong>约束</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f_id</td>\n<td>INTEGER</td>\n<td>PRIMARY KEY</td>\n<td>基金编号</td>\n</tr>\n<tr>\n<td>f_name</td>\n<td>VARCHAR(100)</td>\n<td>NOT NULL</td>\n<td>基金名称</td>\n</tr>\n<tr>\n<td>f_type</td>\n<td>CHAR(30)</td>\n<td></td>\n<td>基金类型</td>\n</tr>\n<tr>\n<td>f_risk</td>\n<td>INTERGER</td>\n<td></td>\n<td>风险等级</td>\n</tr>\n<tr>\n<td>f_manager</td>\n<td>INTERGER</td>\n<td>NOT NULL</td>\n<td>基金管理者</td>\n</tr>\n<tr>\n<td>f_amount</td>\n<td>INTERGER</td>\n<td>NOT NULL</td>\n<td>基金金额</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>创建数据库表</p>\n<ol>\n<li>\n<p>创建 finance 数据库作为项目数据库，数据库编码为 UTF-8。（2 分）</p>\n<ol>\n<li>切换到 omm 用户<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120152854123.png\" alt=\"image-20211120152854123\" /></li>\n<li>启动数据库服务<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120152924367.png\" alt=\"image-20211120152924367\" /></li>\n<li>登入 postres 数据库 (为了在里面创建新的数据库)<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120152949937.png\" alt=\"image-20211120152949937\" /></li>\n<li>创建 finance 数据库，设置编码为 UTF-8<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120153159839.png\" alt=\"image-20211120153159839\" /></li>\n</ol>\n</li>\n<li>\n<p>连接 finance 数据库，创建名为 finance 的 schema，并设置 finance 为当前的 schema。（2 分）</p>\n<ol>\n<li>连接 finance 数据库<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120153222258.png\" alt=\"image-20211120153222258\" /></li>\n<li>创建名为 finance 的 schema，并设置 finance 为当前的 schema<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120153259340.png\" alt=\"image-20211120153259340\" /></li>\n</ol>\n</li>\n<li>\n<p>在 finance 模式下完成金融管理系统中所有数据库对象（数据表）的创建，并完成数据的填充。其中客户数据不少于 20 条，银行卡数据不少于 10 条，其他数据不少于 5 条；（6 分）</p>\n<ol>\n<li>\n<p>数据表创建</p>\n<ol>\n<li>\n<p>客户表创建</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120162145657.png\" alt=\"image-20211120162145657\" /></p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120162136314.png\" alt=\"image-20211120162136314\" /></p>\n</li>\n<li>\n<p>银行卡表创建<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161519458.png\" alt=\"image-20211120161519458\" /><br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161510470.png\" alt=\"image-20211120161510470\" /></p>\n</li>\n<li>\n<p>理财产品表创建<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161622995.png\" alt=\"image-20211120161622995\" /></p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161716375.png\" alt=\"image-20211120161716375\" /></p>\n</li>\n<li>\n<p>保险信息表创建</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161636166.png\" alt=\"image-20211120161636166\" /><br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161724463.png\" alt=\"image-20211120161724463\" /></p>\n</li>\n<li>\n<p>基金信息表创建</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161645388.png\" alt=\"image-20211120161645388\" /></p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161745238.png\" alt=\"image-20211120161745238\" /></p>\n</li>\n<li>\n<p>资产信息表创建</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161659959.png\" alt=\"image-20211120161659959\" /></p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120161759138.png\" alt=\"image-20211120161759138\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p>添加数据</p>\n<ol>\n<li>\n<p>客户信息添加<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120163251246.png\" alt=\"image-20211120163251246\" /></p>\n</li>\n<li>\n<p>银行卡数据填充<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120163727388.png\" alt=\"image-20211120163727388\" /></p>\n</li>\n<li>\n<p>理财产品填充</p>\n<p>INSERT INTO finance.f_products</p>\n<p>(fp_id  ,fp_year   ,fp_amount  ,fp_name   ,fp_description ) VALUES</p>\n<p>(1    ,2      ,4000000   ,' 储蓄 '   ,' 储蓄理财产品 '),</p>\n<p>(2    ,1      ,3000    ,' 债券 '   ,' 债券是政府、企业、银行等债务人为筹集资金，按照法定程序发行并向债权人承诺于指定日期还本付息的有价证券 '),</p>\n<p>(3    ,1      ,200000   ,' 股票 '   ,' 股份公司为筹集资金而发行给各个股东作为持股凭证并借以取得股息和红利的一种有价证券 '),</p>\n<p>(4    ,3      ,2000    ,' 国债 '   ,' 国家以其信用为基础，按照债的一般原则，通过向社会筹集资金所形成的债权债务关系 '),</p>\n<p>(5    ,2      ,10000    ,' 大宗商品 ' ,' 与大宗商品期货挂钩的理财产品。目前市场上主要以挂钩黄金、石油、农产品的理财产品居多 ')<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120174858479.png\" alt=\"image-20211120174858479\" /></p>\n</li>\n<li>\n<p>保险产品填充</p>\n<p>INSERT INTO finance.insurance(i_name,i_id,i_amount,i_person,i_year,i_project) VALUES</p>\n<p>(' 意外保险 ',3,5000,' 所有人 ',20,' 平安保险 '),</p>\n<p>(' 医疗保险 ',4,2000,' 所有人 ',20,' 平安保险 '),</p>\n<p>(' 健康保险 ',1,2000,' 老年人 ',10,' 平安保险 '),</p>\n<p>(' 人寿保险 ',2,3000,' 老年人 ',10,' 平安保险 '),</p>\n<p>(' 财产损失保险 ',5,1500,' 中年人 ',3,' 平安保险 ');<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120175159475.png\" alt=\"image-20211120175159475\" /></p>\n</li>\n<li>\n<p>基金表格填充</p>\n<p>INSERT INTO finance.fund (f_id,fp_name,f_type,f_risk,f_manager,f_amount) VALUES</p>\n<p>(1,' 股票基金 ',' 股票型 ',3,1,200000),</p>\n<p>(2,' 债券基金 ',' 债券型 ',2,2,3000),</p>\n<p>(3,' 投资基金 ',' 债券型 ',3,2,1000),</p>\n<p>(4,' 国债 ',' 货币型 ',1,4,2000),</p>\n<p>(5,' 期货 ',' 期货型 ',2,5,1500);</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120180449122.png\" alt=\"image-20211120180449122\" /></p>\n</li>\n<li>\n<p>资产表格填充</p>\n<p>INSERT INTO finance.property</p>\n<p>(p_id  , p_c_id   ,p_i_id , p_status  , p_amount  ,p_get_time   ,p_income  ,p_type ) VALUES</p>\n<p>(1    ,1      ,1    ,' 可用 '   ,100     ,'2021-11-20'  ,2000    ,1),</p>\n<p>(2    ,1      ,2    ,' 可用 '   ,100     ,'2021-11-21'  ,3020    ,1),</p>\n<p>(3    ,1      ,1    ,' 冻结 '   ,100     ,'2021-11-20'  ,2000    ,2),</p>\n<p>(4    ,1      ,4    ,' 可用 '   ,101     ,'2021-11-10'  ,3000    ,3),</p>\n<p>(5    ,2      ,5    ,' 可用 '   ,100     ,'2021-11-20'  ,2000    ,2)</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120181110730.png\" alt=\"image-20211120181110730\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>对表添加外键约束，在银行信息表和资产信息表中，都存在每个银行卡必须有一个持卡者、每份资产必须都有一个资产拥有者这样的对应关系。因此针对这种对应关系，创建外键约束。（4 分）</p>\n<p>添加外键约束</p>\n<ol>\n<li>\n<p>信用卡的外键<br />\n ALTER TABLE finance.bank_card ADD CONSTRAINT fk_c_id FOREIGN KEY (b_c_id) REFERENCES finance.client (c_id) ON DELETE CASCADE;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120182046151.png\" alt=\"image-20211120182046151\" /></p>\n</li>\n<li>\n<p>资产的外键<br />\n ALTER TABLE finance.property ADD CONSTRAINT fk_pro_c_id FOREIGN KEY (p_c_id) REFERENCES finance.client (c_id) ON DELETE CASCADE;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120182231938.png\" alt=\"image-20211120182231938\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p>在理财产品表、保险信息表和基金信息表中，都存在金额这个属性，在现实生活中，金额不会存在负数。因此针对表中金额的属性，增加大于 0 的约束条件。（4 分）</p>\n<p>增加大于 0 的约束</p>\n<ol>\n<li>\n<p>f_products 表<br />\n ALTER table finance.f_products ADD CONSTRAINT c_p_mount CHECK (fp_amount&gt;=0);<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120182747860.png\" alt=\"image-20211120182747860\" /></p>\n</li>\n<li>\n<p>fund 表</p>\n<p>ALTER table finance.fund ADD CONSTRAINT c_f_mount CHECK (f_amount &gt;=0);<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120182809449.png\" alt=\"image-20211120182809449\" /></p>\n</li>\n<li>\n<p>insurance 表<br />\n ALTER table finance.insurance ADD CONSTRAINT c_i_mount CHECK (i_amount&gt;=0);<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120182806605.png\" alt=\"image-20211120182806605\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p>输出：</p>\n<ol>\n<li>\n<p>输出查询所有表的数据字典的查询语句和结果，可以截图或者复制黏贴代码。(基本都在之前有展示，这里对所有的表及 schema 进行了一次查询)<br />\nselect * from pg_tables;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183633861.png\" alt=\"image-20211120183633861\" /></p>\n</li>\n<li>\n<p>输出查询所有表的数据的查询语句和结果，可以截图或者复制黏贴代码。</p>\n<ol>\n<li>\n<p>client 表<br />\n select * from finance.client;</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120182955194.png\" alt=\"image-20211120182955194\" /></p>\n</li>\n<li>\n<p>bank_card 表<br />\n select * from finance.bank_card;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183115059.png\" alt=\"image-20211120183115059\" /></p>\n</li>\n<li>\n<p>fund 表<br />\n select * from finance.fund;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183213621.png\" alt=\"image-20211120183213621\" /></p>\n</li>\n<li>\n<p>f_products 表<br />\n select * from finance.f_products;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183232153.png\" alt=\"image-20211120183232153\" /></p>\n</li>\n<li>\n<p>insurance 表<br />\n select * from finance.insurance;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183242518.png\" alt=\"image-20211120183242518\" /></p>\n</li>\n<li>\n<p>property 表<br />\n select * from finance.property;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183254782.png\" alt=\"image-20211120183254782\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p>输出所有创建约束的语句和创建结果，可以截图或者复制黏贴代码 (这在之前已经放上了)</p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>对表中的数据进行查询操作</p>\n<ol>\n<li>\n<p>l  至少完成 1 条单表查询和 1 条表查询。（4 分）<br />\n单表查询 -- 查询客户表中所有的客户 id</p>\n<p>select c_id from finance.client;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120183930730.png\" alt=\"image-20211120183930730\" /></p>\n<p>表查询<br />\n select c_name from finance.client;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120191355193.png\" alt=\"image-20211120191355193\" /></p>\n</li>\n<li>\n<p>l  至少完成两条聚合查询，例如查询用户表中有多少个用户；查询保险信息表中，保险金额的平均值等。（4 分）<br />\n<strong>查询 property 表的 income 平均值</strong><br />\n select avg (p_income) from finance.property<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120191618236.png\" alt=\"image-20211120191618236\" /><br />\n<strong> 查询用户表中用户总数</strong><br />\n select count (*) from finance.client;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120191822353.png\" alt=\"image-20211120191822353\" /></p>\n</li>\n<li>\n<p>l  至少完成 3 条连接查询，例如：半连接、反连接、多表查询和子查询。（6 分）</p>\n<ol>\n<li>等值连接查询，查询每个用户及其拥有的资产<br />\n select finance.client.*,finance.property. *<br />\nfrom finance.client,finance.property<br />\nwhere finance.client.c_id=finance.property.p_c_id;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120192143231.png\" alt=\"image-20211120192143231\" /></li>\n<li>自身连接，在 fund 表中对每一个基金项，查询 manager 和自身 id 相同的基金<br />\n select first.*,second.f_manager<br />\nfrom finance.fund first,finance.fund second<br />\nwhere first.f_id = second.f_manager<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120192923196.png\" alt=\"image-20211120192923196\" /></li>\n<li>子查询，查询和 p_id=3 的资产处于相同状态的资产 (然后发现就它自己冻结着)<br />\nselect * from finance.property<br />\nwhere p_status=<br />\n(select p_status from finance.property where p_id=3);<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120193259515.png\" alt=\"image-20211120193259515\" /></li>\n</ol>\n</li>\n<li>\n<p>至少完成 1 条 ORDER BY 查询。（2 分）<br />\n将资产按照收益逆序输出<br />\n select * from finance.property order by p_income desc;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120193418297.png\" alt=\"image-20211120193418297\" /></p>\n</li>\n<li>\n<p>至少完成 1 条 GROUP BY……HAVING 查询。（4 分）</p>\n</li>\n<li>\n<p>查询收益在 2000 及以上的资产及其平均收益，将结果按 p_id 分组显示，且只显示平均收益大于 2500 的组<br />\n select *,avg (p_income)   from finance.property<br />\nwhere p_income&gt;=2000</p>\n<p>group by p_id<br />\nhaving avg(p_income)&gt;=2500;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120194044403.png\" alt=\"image-20211120194044403\" /></p>\n</li>\n<li>\n<p>查询基金，将其按 f_id 分组，且只显示平均数量大于等于 2000 的组<br />\n select *,avg (f_amount) from finance.fund<br />\ngroup by f_id<br />\nhaving avg(f_amount)&gt;=2000;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120194430725.png\" alt=\"image-20211120194430725\" /></p>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"45-创建视图和索引\"><a class=\"anchor\" href=\"#45-创建视图和索引\">#</a> 4.5 创建视图和索引</h3>\n<ol>\n<li>\n<p>创建一个视图</p>\n<p>查看 client 中属性，除了 c_mail 属性<br />\n create view see_client<br />\nas<br />\nselect c_id,c_name,c_id_card,c_phone,c_password<br />\nfrom finance.client<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120195705769.png\" alt=\"image-20211120195705769\" /></p>\n</li>\n<li>\n<p>修改视图</p>\n<p>修改视图所属 schema<br />\nalter view see_client set schema finance;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202011203.png\" alt=\"image-20211120202011203\" /></p>\n</li>\n<li>\n<p>使用视图进行查询<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202005604.png\" alt=\"image-20211120202005604\" /></p>\n</li>\n<li>\n<p>重命名视图<br />\n alter view finance.see_client<br />\nrename to oh_my_god;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202200841.png\" alt=\"image-20211120202200841\" /></p>\n</li>\n<li>\n<p>删除视图<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202227819.png\" alt=\"image-20211120202227819\" /></p>\n</li>\n<li>\n<p>创建索引<br />\n为客户电话号码创建索引<br />\n CREATE INDEX index_phone on finance.client (c_phone) ;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202553719.png\" alt=\"image-20211120202553719\" /></p>\n</li>\n<li>\n<p>重建索引<br />\n对整个客户表重建索引<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202715402.png\" alt=\"image-20211120202715402\" /></p>\n</li>\n<li>\n<p>重命名索引<br />\n alter index finance.index_phone rename to ind_phone;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202831047.png\" alt=\"image-20211120202831047\" /></p>\n</li>\n<li>\n<p>删除索引<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120202849544.png\" alt=\"image-20211120202849544\" /></p>\n</li>\n</ol>\n<h3 id=\"146-数据修改和删除5分\"><a class=\"anchor\" href=\"#146-数据修改和删除5分\">#</a> 1.4.6 数据修改和删除（5 分）</h3>\n<p>任务：</p>\n<p>l  修改数据：至少修改 2 个不同的数据。（3 分）</p>\n<ol>\n<li>\n<p>将 client 表中第 1 个元素的值 c_name 改为 ' 年没怀念'<br />\n 之前的表<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205008902.png\" alt=\"image-20211120205008902\" /><br />\n 修改语句:<br />\nupdate finance.client<br />\nset c_name=' 年没怀念'<br />\nwhere c_id=1;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205223012.png\" alt=\"image-20211120205223012\" /></p>\n<p>修改后表情况<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205200129.png\" alt=\"image-20211120205200129\" /></p>\n</li>\n<li>\n<p>将 property 中 p_get_time 小于 2021-11-11 00:00:00 的值修改为 2021-11-19 00:00:00</p>\n<p>修改前状态<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205546236.png\" alt=\"image-20211120205546236\" /><br />\n 修改<br />\n update finance.property<br />\nset p_get_time='2021-11-19'<br />\nwhere p_get_time&lt;'2021-11-11';<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205628164.png\" alt=\"image-20211120205628164\" /><br />\n 修改后状态<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205638384.png\" alt=\"image-20211120205638384\" /></p>\n</li>\n</ol>\n<p>l  删除指定数据：至少删除 2 个不同数据表的数据。（2 分）</p>\n<ol>\n<li>\n<p>将 finance.property 中 p_amount=101 的数据删除</p>\n<p>删除前表情况</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120205638384.png\" alt=\"image-20211120205638384\" /></p>\n<p>删除<br />\n delete from finance.property where p_amount=101;</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210444230.png\" alt=\"image-20211120210444230\" /></p>\n</li>\n</ol>\n<p>​\t\t删除后表情况<br />\n​\t\t<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210451058.png\" alt=\"image-20211120210451058\" /></p>\n<ol start=\"2\">\n<li>\n<p>删掉 c_id&gt;20 的用户信息</p>\n<p>删除前表情况</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210652108.png\" alt=\"image-20211120210652108\" /></p>\n<p>删除操作</p>\n<p>delete from finance.client where c_id&gt;20;<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210705838.png\" alt=\"image-20211120210705838\" /></p>\n</li>\n</ol>\n<p>​\t\t删除后表情况<br />\n​\t\t<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210710547.png\" alt=\"image-20211120210710547\" /></p>\n<h3 id=\"147-创建新用户6分\"><a class=\"anchor\" href=\"#147-创建新用户6分\">#</a> 1.4.7 创建新用户（6 分）</h3>\n<p>任务：</p>\n<ol>\n<li>\n<p>新用户的创建和授权：创建用户 dbuser，密码为 Gauss#3demo；给用户 dbuser 授予 finance 数据库下银行卡信息表的查询和插入权限，并将 finance 模式的权限也授予 dbuser 用户。（3 分）</p>\n<p>创建用户<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210919044.png\" alt=\"image-20211120210919044\" /></p>\n<p>给用户 dbuser 授予 finance 数据库下银行卡信息表的查询和插入权限，并将 finance 模式的权限也授予 dbuser 用户<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120210938886.png\" alt=\"image-20211120210938886\" /></p>\n</li>\n<li>\n<p>新用户连接数据库：使用新用户连接 finance 数据库；访问 finance 数据库的银行卡信息表。（2 分）</p>\n<p>新用户连接</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120211203343.png\" alt=\"image-20211120211203343\" /><br />\n 新用户访问 finance 数据库的银行卡信息表</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120211232019.png\" alt=\"image-20211120211232019\" /></p>\n</li>\n<li>\n<p>删除 finance 模式。（1 分）<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120211528768.png\" alt=\"image-20211120211528768\" /></p>\n</li>\n</ol>\n<h3 id=\"148-使用jdbc连接opengauss数据库\"><a class=\"anchor\" href=\"#148-使用jdbc连接opengauss数据库\">#</a> 1.4.8 使用 jdbc 连接 openGauss 数据库</h3>\n<ol>\n<li>\n<p>创建测试数据库 demo；<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120211928291.png\" alt=\"image-20211120211928291\" /></p>\n</li>\n<li>\n<p>创建名为 demo 的 schema，并设置 demo 为当前的 schema<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120211933670.png\" alt=\"image-20211120211933670\" /><br />\n 设置搜索路径为 demo</p>\n<p>SET search_path TO demo;</p>\n</li>\n<li>\n<p>创建测试表 websites（id,name,url），数据为（'1', 'openGauss', '<a href=\"https://opengauss.org/zh/')%EF%BC%8C('2\">https://opengauss.org/zh/')，('2</a>', ' 华为云 ', '<a href=\"https://www.huaweicloud.com/\">https://www.huaweicloud.com/</a>'), ('3', 'openEuler', '<a href=\"https://openeuler.org/zh/\">https://openeuler.org/zh/</a>'), ('4', ' 华为 support 中心 ', '<a href=\"https://support.huaweicloud.com/\">https://support.huaweicloud.com/</a>')。（3 分）<br />\ncreate table websites<br />\n(<br />\nid Integer primary key,<br />\nname varchar(200),<br />\nurl varchar(200)</p>\n<p>);<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120212236363.png\" alt=\"image-20211120212236363\" /><br />\n 插入数据</p>\n<p>INSERT INTO websites (id,name,url) VALUES</p>\n<p>('1', 'openGauss', '<a href=\"https://opengauss.org/zh/\">https://opengauss.org/zh/</a>'),</p>\n<p>('2', ' 华为云 ', '<a href=\"https://www.huaweicloud.com/\">https://www.huaweicloud.com/</a>'),</p>\n<p>('3', 'openEuler', '<a href=\"https://openeuler.org/zh/\">https://openeuler.org/zh/</a>'),</p>\n<p>('4', ' 华为 support 中心 ', '<a href=\"https://support.huaweicloud.com/\">https://support.huaweicloud.com/</a>')</p>\n<p><img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120212401022.png\" alt=\"image-20211120212401022\" /></p>\n</li>\n<li>\n<p>查看入站规则是否包括 tcp26000 端口<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120213457003.png\" alt=\"image-20211120213457003\" /></p>\n</li>\n<li>\n<p>查看 java 版本是否为 8<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211120213634213.png\" alt=\"image-20211120213634213\" /></p>\n</li>\n<li>\n<p>创建项目，引入 postgres.jar 包<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211206104756935.png\" alt=\"image-20211206104756935\" /></p>\n</li>\n<li>\n<p>写下测试程序如下<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211206104819179.png\" alt=\"image-20211206104819179\" /><br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211206104832554.png\" alt=\"image-20211206104832554\" /></p>\n</li>\n<li>\n<p>结果<br />\n<img src=\"C:%5CUsers%5Cwww13%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211206104851481.png\" alt=\"image-20211206104851481\" /></p>\n</li>\n</ol>\n<p>本实验完成</p>\n",
            "tags": [
                "exp8"
            ]
        },
        {
            "id": "http://example.com/2021/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7/",
            "url": "http://example.com/2021/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7/",
            "title": "",
            "date_published": "2021-12-06T11:03:26.530Z",
            "content_html": "<h1 id=\"数据库的安全性\"><a href=\"#数据库的安全性\" class=\"headerlink\" title=\"数据库的安全性\"></a>数据库的安全性</h1><h2 id=\"8-4-存取控制\"><a href=\"#8-4-存取控制\" class=\"headerlink\" title=\"8.4 存取控制\"></a>8.4 存取控制</h2><h6 id=\"用户权限定义和合法的权限检查机制一起组成了DBMS的安全子系统\"><a href=\"#用户权限定义和合法的权限检查机制一起组成了DBMS的安全子系统\" class=\"headerlink\" title=\"用户权限定义和合法的权限检查机制一起组成了DBMS的安全子系统\"></a>用户权限定义和合法的权限检查机制一起组成了DBMS的安全子系统</h6><p>常用存取控制方法</p>\n<h4 id=\"自主存取控制\"><a href=\"#自主存取控制\" class=\"headerlink\" title=\"自主存取控制\"></a>自主存取控制</h4><p>灵活</p>\n<p>同一用户对不同的数据对象有不同的…</p>\n<h5 id=\"授权粒度\"><a href=\"#授权粒度\" class=\"headerlink\" title=\"授权粒度\"></a>授权粒度</h5><p>授权的数据对象粒度</p>\n<p>数据库,表,属性列,行…</p>\n<ol>\n<li>实现–GRANT REVOKE</li>\n<li>数据库角色<br>在用户量较大的情况下引入<br>定义:一组与数据库操作有关的角色<br>可以为具有相同权限的用户创建一个角色</li>\n<li>权限传播<br>…</li>\n</ol>\n<h4 id=\"强制存取控制\"><a href=\"#强制存取控制\" class=\"headerlink\" title=\"强制存取控制\"></a>强制存取控制</h4><h5 id=\"主体与客体\"><a href=\"#主体与客体\" class=\"headerlink\" title=\"主体与客体\"></a>主体与客体</h5><h5 id=\"敏感度标记\"><a href=\"#敏感度标记\" class=\"headerlink\" title=\"敏感度标记\"></a>敏感度标记</h5><p>DBMS为每个实例指派一个敏感度标记</p>\n<p>敏感度分为若干级别(绝密..</p>\n<p>主体的敏感度标记称为许可证级别</p>\n<p>客体的称为密级</p>\n<p>MAC机制就是通过对比主体的Label和客体的Label,最终确定主体是否能够存取客体</p>\n<h5 id=\"强制存取控制规则\"><a href=\"#强制存取控制规则\" class=\"headerlink\" title=\"强制存取控制规则\"></a>强制存取控制规则</h5><ol>\n<li>读 主体许可证级别&gt;=客体密级</li>\n<li>写 主体的许可证级别=客体密级</li>\n<li>修正规则*****<ol>\n<li>waiting for write</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"权限-只有具有合法的许可证才能存取\"><a href=\"#权限-只有具有合法的许可证才能存取\" class=\"headerlink\" title=\"权限,只有具有合法的许可证才能存取\"></a>权限,只有具有合法的许可证才能存取</h4><p>每一个用户被授予某一个级别的许可证</p>\n<p>对于任意一个对象,只有具有合法的许可证才能存取</p>\n<h2 id=\"8-5-视图机制\"><a href=\"#8-5-视图机制\" class=\"headerlink\" title=\"8.5 视图机制\"></a>8.5 视图机制</h2>",
            "tags": []
        },
        {
            "id": "http://example.com/2021/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/2021/12/06/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/",
            "title": "",
            "date_published": "2021-12-06T11:03:26.527Z",
            "content_html": "<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>select</p>\n<p>from</p>\n<p>where</p>\n<p>group by</p>\n<p>having </p>\n<p>order by</p>\n<h5 id=\"insert\"><a href=\"#insert\" class=\"headerlink\" title=\"insert\"></a>insert</h5><p>指定属性列–不包含的取空</p>\n<p>不指定-不能省略任何属性</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/12/06/9.1%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E6%A6%82%E8%BF%B0/",
            "url": "http://example.com/2021/12/06/9.1%20%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%8C%E6%95%B4%E6%80%A7%E6%A6%82%E8%BF%B0/",
            "title": "",
            "date_published": "2021-12-06T11:03:26.476Z",
            "content_html": "<p>9.1 数据库完整性概述</p>\n<p>数据库完整性–数据的正确性,有效性,西安共性</p>\n<p>列级约束</p>\n<p>对属性的数据类型,等的定义</p>\n<p>元祖约束</p>\n<p>元组中各个属性之间的约束关系</p>\n<h4 id=\"实现完整性约束的方法\"><a href=\"#实现完整性约束的方法\" class=\"headerlink\" title=\"实现完整性约束的方法\"></a>实现完整性约束的方法</h4><ol>\n<li>提供定义机制</li>\n<li>提供检查方法</li>\n<li>违约处理</li>\n</ol>\n<h2 id=\"9-4用户定义的完整性\"><a href=\"#9-4用户定义的完整性\" class=\"headerlink\" title=\"9.4用户定义的完整性\"></a>9.4用户定义的完整性</h2><h2 id=\"9-5触发器\"><a href=\"#9-5触发器\" class=\"headerlink\" title=\"9.5触发器\"></a>9.5触发器</h2><p>一类用户定义在关系数据表上的一类由事件驱动的特殊过程,用编程的方法实现复杂的业务规则</p>\n<p>是一种特殊类型的存储过程</p>\n<p>可用触发器完成很多数据库完整性保护的过程</p>\n<ol>\n<li>复杂的业务规则</li>\n<li>比较数据修改前后状态</li>\n</ol>\n<p>SQL:CREATE TRIGER命令</p>\n<h1 id=\"事务\"><a href=\"#事务\" class=\"headerlink\" title=\"事务\"></a>事务</h1><p>原子性:不可分割</p>\n<p>一致性:事务执行结果必须从一个状态转换到另一个状态时保持一致,即若中间出现错误,则将所有操作撤销</p>\n<p>事务应当具有ACID性质，<br>A是<strong>原子</strong>性(atomic)：事务中包含的各项操作必须全部成功执行或者全部不执行。任何一项操作失败，将导致整个事务失败，其他已经执行的任务所作的数据操作都将被撤销，只有所有的操作全部成功，整个事务才算是成功完成。<br>C是<strong>一致性</strong>(consistent)：保证了当事务结束后，系统状态是一致的。那么什么是一致的系统状态？例如，如果银行始终遵循着”银行账号必须保持正态平衡”的原则，那么银行系统的状态就是一致的。上面的转账例子中，在取钱的过程中，账户会出现负态平衡，在事务结束之后，系统又回到一致的状态。这样，系统的状态对于客户来说，始终是一致的。<br>I是<strong>隔离</strong>性(isolated)：使得并发执行的事务，彼此无法看到对方的中间状态。保证了并发执行的事务顺序执行，而不会导致系统状态不一致。<br>D是<strong>持久性</strong>(durable)：保证了事务完成后所作的改动都会被持久化，即使是发生灾难性的失败。可恢复性资源保存了一份事务日志，如果资源发生故障，可以通过日志来将数据重建起来。</p>\n<p>事务应处在下列状态之一</p>\n<p>活动状态</p>\n<p>失败状态:意味着要回滚</p>\n<p>中止状态:数据库已经回滚完毕,恢复到提交前状态</p>\n<p>提交状态:当数据更改完全写入磁盘时,进入提交状态</p>\n<p>10.3.1事务故障的恢复</p>\n<p>1.反向扫描日文件日志,查找该事务的更新操作</p>\n<p>2.对该事务的更新操作执行你操作</p>\n<p>3.继续反向扫描,直到读到此事务的开始操作</p>\n<p>10.3.2系统故障恢复</p>\n<p>1.<strong>正向</strong>扫描日志文件,列出Redo队列,Undo队列</p>\n<h3 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h3><p><u><strong>登记两条原则</strong></u></p>\n<p><u><strong>1.登记次序严格按并行事物执行顺序</strong></u></p>\n<p><u><strong>2.先写日志文件,后写数据库</strong></u></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/12/06/hello-world/",
            "url": "http://example.com/2021/12/06/hello-world/",
            "title": "Hello World",
            "date_published": "2021-12-06T05:18:37.655Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}